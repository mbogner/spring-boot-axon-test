buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath group: 'org.springframework.boot', name: 'spring-boot-gradle-plugin', version: '1.5.6.RELEASE'
        classpath group: 'com.moowork.gradle', name: 'gradle-node-plugin', version: '1.2.0'
    }
}

plugins {
    id 'org.sonarqube' version '2.2'
}

group 'pm.mbo'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'jacoco'
apply plugin: 'com.moowork.node'
apply plugin: 'idea'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '1.5.6.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '1.5.6.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-websocket', version: '1.5.6.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '1.5.6.RELEASE'

    compile group: 'org.axonframework', name: 'axon-spring-boot-starter', version: '3.0.6'
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.9.0'

    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.16.18'

    runtime group: 'com.h2database', name: 'h2', version: '1.4.196'

    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '1.5.6.RELEASE'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.hamcrest', name: 'java-hamcrest', version: '2.0.0.0'
    testCompile group: 'org.apache.commons', name: 'commons-lang3', version: '3.6'
    testCompile group: 'org.apache.commons', name: 'commons-text', version: '1.1'
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.5.1'
}

test {
    jacoco {
        enabled = true
    }
}

jacoco {
    toolVersion = '0.7.9'
}

jacocoTestReport {
    reports {
        xml.enabled true
        xml.destination "${buildDir}/reports/jacoco/report.xml"
        html.enabled false
        csv.enabled false
    }
}

node {
    nodeModulesDir = file("${project.projectDir}/frontend")
}

task buildClientDev(type: NpmTask, dependsOn: 'npmInstall') {
    group = 'build'
    description = 'Compile client side folder for development'
    args = ['run', 'buildDev']
}

task buildClient(type: NpmTask, dependsOn: 'npmInstall') {
    group = 'build'
    description = "Compile client side folder for production"
    args = ['run', 'build']
}

task copyFrontend(type: Copy) {
    mustRunAfter 'buildClient'
    mustRunAfter 'buildClientDev'
    from("${project.buildDir}/resources/main/static")
    into "${project.projectDir}/out/production/resources/static"
}

clean.doFirst {
    delete "${project.projectDir}/out"
}

bootRun.dependsOn(buildClientDev)

jar.dependsOn(buildClient)
